/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package threesum;

import java.util.Arrays;
import java.util.HashMap;
import java.util.Scanner;

public class ThreeSum {
    
    public static int[] threeSum_Cubic(int[] x) {
        int n = x.length;      
        for (int i = 0; i < n; ++i) {
            int a = x[i];           
            for (int j = i + 1; j < n; ++j) {
                int b = x[j];          
                for (int k = j + 1; k < n; ++k) {
                    int c = x[k];      
                    if (a + b + c == 0) { 
                        return new int[] { a, b, c }; 
                    }
                }
            }
        }
        return null;
    }

    public static int[] threeSum_Quadratic(int[] x) {
        int n = x.length;
        int[] y = x.clone();
        Arrays.sort(y);
        
        for (int i = 0; i < n; ++i) {
            int a = y[i];
            int lp = i + 1;
            int rp = n - 1;
            while (lp < rp) {
                int b = y[lp];
                int c = y[rp];       
                if (a + b + c == 0) {
                    return new int[] { a, b, c };
                }         
                else if (a + b + c < 0) { 
                    ++lp; 
                } else { 
                    --rp; 
                }
            }
        }
        return null;
    }

    public static int[] threeSum_HashMap(int[] x) {
        int n = x.length;
        var H = new HashMap<Integer, Integer>();
        for (int i = 0; i < n; ++i) {
            H.put(x[i], i);
        }

        for (int i = 0; i < n; ++i) {
            int a = x[i];
            for (int j = i + 1; j < n; ++j) {
                int b = x[j];
                int c = -a - b;
                Integer k = H.get(c);
                if (k != null && j < k) {
                    return new int[] { a, b, c };
                }
            }
        }
        return null;
    }

    // public static int[] threeSum_HashMap_NoCheck(int[] x) {
    //     int n = x.length;
    //     var H = new HashMap<Integer, Integer>();
    //     for (int i = 0; i < n; ++i) {
    //         H.put(x[i], i);
    //     }

    //     for (int i = 0; i < n; ++i) {
    //         int a = x[i];
    //         for (int j = i + 1; j < n; ++j) {
    //             int b = x[j];
    //             int c = -a - b;
    //             Integer k = H.get(c);
    //             if (k != null) {
    //                 return new int[] { a, b, c };
    //             }
    //         }
    //     }
    //     return null;
    // }

    public static int[] readInput() {
        Scanner s = new Scanner(System.in);
        int[] x = null;
        try {
            int n = s.nextInt();
            x = new int[n];
            for (int i = 0; i < n; ++i) {
                x[i] = s.nextInt();
            } 
        } finally {
            s.close();
        } 
        return x;
    }

    public static void main(String[] args) {
        int[] x = readInput();
        int[] y = null;

        if ("cubic".equals(args[0])) {
            y = threeSum_Cubic(x);
        }

        else if ("quadratic".equals(args[0])) {
            y = threeSum_Quadratic(x);
        }

        else if ("hashmap".equals(args[0])) {
            y = threeSum_HashMap(x);
        }

        if (y == null) {
            System.out.println("null");
        } else {
            System.out.println(String.format("%d %d %d", y[0], y[1], y[2]));
        }
    }
}
